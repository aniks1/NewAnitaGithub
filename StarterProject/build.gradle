/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
   flatDir {
       dirs 'lib'
   }
    maven { url 'https://repo.maven.apache.org/maven2/'}
}

dependencies {
    
   
   	// https://mvnrepository.com/artifact/org.glassfish.jersey.inject/jersey-hk2
	compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.28'

	// https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-json-jackson
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.28'

    // https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-client
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.28'
    
    // https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-multipart
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.28'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.14.0'
    
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    compile 'log4j:log4j:1.2.17'
    
    // https://mvnrepository.com/artifact/io.appium/java-client
	compile group: 'io.appium', name: 'java-client', version: '5.0.4'
	
	// https://mvnrepository.com/artifact/org.apache.commons/commons-io
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    
    // https://mvnrepository.com/artifact/commons-codec/commons-codec
	compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
    
    // https://mvnrepository.com/artifact/org.openpnp/opencv
    compile group: 'org.openpnp', name: 'opencv', version: '3.4.2-1'
    
     // https://mvnrepository.com/artifact/org.springframework/spring-context
	compile group: 'org.springframework', name: 'spring-context', version: '5.1.5.RELEASE'
    
    compile name: 'CxApi'
    
    compile name: 'CxDataModel'
    
    task copyJarsToLib (type: Copy) {
      def toDir = "build/libs/StarterProject_lib"

    // create directories, if not already done:
    file(toDir).mkdirs()

    // copy jars to lib folder:
    from configurations.compile
    into toDir
	
}

jar {
   
    manifest {
        attributes (
        'Main-Class': 'com.tcs.cx.servicepanel.api.CxScenarioRunner',
        "Class-Path": '. StarterProject_lib/' + configurations.compile.collect { it.getName() }.join(' StarterProject_lib/') + configurations.runtime.collect { it.getName() }.join(' StarterProject_lib/')
         )
      }
      
       baseName 'StarterProject'
     
    }

  jar.dependsOn copyJarsToLib
}
